#! /bin/sh
### BEGIN INIT INFO
# Provides:          pidgeonsv
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Provides a bouncer for irc
# Description:       Provides a bouncer for irc
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Pidgeon irc services"
NAME=pidgeonsv
#DAEMON="/usr/bin/pidgeon-sv"
DAEMON="/usr/bin/mono"
PIDFILE=/var/run/$NAME.pid
PIDFILEMONO="/var/run/$NAME"_MONO.pid
SCRIPTNAME=/etc/init.d/$NAME
FOLDER=/usr/share/pidgeon-sv
DAEMON_ARGS="pidgeon-sv.exe -p $PIDFILE"
SERVICE_USER=pidgeonsv
#DAEMON_ARGS="-p $PIDFILEMONO"

if [ ! -f "$FOLDER/pidgeon-sv.exe" ];then
  echo "ERROR: you don't have the binary for daemon"
  exit 1
fi

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

VERBOSE=yes

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
        touch "$PIDFILE"
        chown $SERVICE_USER "$PIDFILE"
        # Return
        #   0 if daemon has been started
        #   1 if daemon was already running
        #   2 if daemon could not be started
        start-stop-daemon -d $FOLDER -c $SERVICE_USER -b --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
                || return 1
        start-stop-daemon -d $FOLDER -c pidgeonsv -b --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \
                $DAEMON_ARGS \
                || return 2
        # Add code here, if necessary, that waits for the process to be ready
        # to handle requests from services started subsequently which depend
        # on this one.  As a last resort, sleep for some time.
}

#
# Function that stops the daemon/service
#
do_stop()
{
        # Return
        #   0 if daemon has been stopped
        #   1 if daemon was already stopped
        #   2 if daemon could not be stopped
        #   other if a failure occurred
        start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
        RETVAL="$?"
        if [ -f "$PIDFILE" ];then
            kill -9 `cat "$PIDFILE"`
            rm -f "$PIDFILE"
        fi
        if [ -f $PIDFILEMONO ];then
            kill `cat "$PIDFILEMONO"` && rm -f "$PIDFILEMONO"
        fi
        [ "$RETVAL" = 2 ] && return 2
        return "$RETVAL"
}

case "$1" in
  start)
        if [ -f "$PIDFILE" ];then
            echo "ERROR: It seems that another instance of pidgeon services is already running, you need to stop it first"
            exit 1
        fi
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  stop)
        if [ ! -f "$PIDFILE" ];then
            echo "ERROR: It seems that pidgeon services are not running"
            exit 1
        fi
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  restart|force-reload)
        #
        # If the "reload" option is implemented then remove the
        # 'force-reload' alias
        #
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        case "$?" in
          0|1)
                do_start
                case "$?" in
                        0) log_end_msg 0 ;;
                        1) log_end_msg 1 ;; # Old process is still running
                        *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
          *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
  *)
echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac
:
